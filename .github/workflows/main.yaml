name: main
on:
  #push:
  #  branches:
  #    - main
  #    - develop
  #pull_request:
  #  branches:
  #    - main
  # NOTE(djeeno): ref. https://docs.github.com/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
  ## NOTE(djeeno): ref. https://docs.github.com/actions/reference/events-that-trigger-workflows#schedule
  #schedule:
  #  - cron: '30 * * * *'

env:
  REPOSITORY_PATH: src/github.com/djeeno/bqtableschema
  #COVERAGE_HTML: src/github.com/djeeno/bqtableschema/coverage.html

jobs:
  ci:
    name: CI
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.REPOSITORY_PATH }}

      - uses: actions/setup-go@v1
        with:
          go-version: 1.15

      # https://github.com/actions/cache/blob/main/examples.md#go---modules
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}                        ## NOTE(djeeno): JSON の中の project_id に相当。 GitHub Actions のログに出ないようにするため
          service_account_email: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}  ## NOTE(djeeno): JSON の中の client_email に相当。 GitHub Actions のログに出ないようにするため
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}  ## NOTE(djeeno): JSON の中身すべてに相当。
          export_default_credentials: true

      - name: Run make ci
        env:
          GO111MODULE: auto
          GOPATH: ${{ github.workspace }}
          APP_ENV: test
        working-directory: ${{ env.REPOSITORY_PATH }}
        run: |
          make ci

      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: coverage.html
      #    path: ${{ env.COVERAGE_HTML }}

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ env.REPOSITORY_PATH }}
